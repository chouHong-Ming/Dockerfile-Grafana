apiVersion: v1
kind: PersistentVolume
metadata:
  name: grafana
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 400Gi
  nfs:
    path: [YOUR_NFS_PATH]
    server: [YOUR_NFS_SERVER]
  persistentVolumeReclaimPolicy: Retain
  volumeMode: Filesystem

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana
  namespace: [YOUR_K8S_NAMESPACE]
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 400Gi
  storageClassName: ""
  volumeMode: Filesystem
  volumeName: grafana

---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
  namespace: [YOUR_K8S_NAMESPACE]
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: grafana
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: grafana
    spec:
      containers:
      - image: chouhongming/grafana
        imagePullPolicy: Always
        name: grafana
        env:
        - name: TIMEZONE
          value: "UTC"
        - name: MOUNT_CONFIG
          value: "false"
        - name: PLUGINS
          value: "alexanderzobnin-zabbix-app,grafana-piechart-panel,grafana-clock-panel,grafana-googlesheets-datasource"
        - name: APP_MODE
          value: "production"
        ports:
        - containerPort: 3000
          name: grafana
          protocol: TCP
        volumeMounts:
        - mountPath: /var/lib/grafana
          name: grafana-store
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: grafana-store
        persistentVolumeClaim:
          claimName: grafana
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: [YOUR_K8S_NAMESPACE]
spec:
  ports:
  - name: grafana
    port: 3000
    protocol: TCP
    targetPort: 3000
  selector:
    app: grafana
  sessionAffinity: None
  type: ClusterIP

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: grafana-web
  namespace: [YOUR_K8S_NAMESPACE]
spec:
  entryPoints:
  - web
  routes:
  - kind: Rule
    match: Host(`[YOUR_DOMAIN]`)
    middlewares:
    - name: [YOUR_K8S_REDIRECT-MIDDLEWARES]
    services:
    - name: grafana
      port: 3000

---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: grafana-websecure
  namespace: [YOUR_K8S_NAMESPACE]
spec:
  entryPoints:
  - websecure
  routes:
  - kind: Rule
    match: Host(`[YOUR_DOMAIN]`)
    services:
    - name: grafana
      port: 3000
  tls:
    certResolver: [YOUR_K8S_RESOLVER_NAME]
    options: {}

